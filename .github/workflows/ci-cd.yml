name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x]
    
    steps:
      - uses: actions/checkout@v3
      
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
      
      - name: Install dependencies
        run: npm run install:all
      
      - name: Lint
        run: npm run lint
      
      - name: Test backend
        run: cd backend && npm test
      
      - name: Test frontend
        run: cd frontend && npm test
      
      - name: Upload test coverage
        uses: actions/upload-artifact@v3
        with:
          name: coverage
          path: |
            backend/coverage
            frontend/coverage

  build:
    name: Build
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
      - uses: actions/checkout@v3
      
      - name: Use Node.js 18.x
        uses: actions/setup-node@v3
        with:
          node-version: 18.x
          cache: 'npm'
      
      - name: Install dependencies
        run: npm run install:all
      
      - name: Build
        run: npm run build
      
      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: build
          path: |
            frontend/.next
            backend/dist

  docker:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: |
            ghcr.io/${{ github.repository }}:latest
            ghcr.io/${{ github.repository }}:${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  deploy-staging:
    name: Deploy to Staging
    runs-on: ubuntu-latest
    needs: docker
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    environment: staging
    
    steps:
      - name: Deploy to staging environment
        run: |
          echo "Deploying to staging environment..."
          # Add deployment steps here, such as:
          # - SSH into staging server
          # - Pull the latest Docker image
          # - Update environment variables
          # - Restart services
          echo "Deployed to staging environment"

  # Uncomment when ready for production deployment
  # deploy-production:
  #   name: Deploy to Production
  #   runs-on: ubuntu-latest
  #   needs: deploy-staging
  #   if: github.event_name == 'push' && github.ref == 'refs/heads/main'
  #   environment: production
  #   
  #   steps:
  #     - name: Deploy to production environment
  #       run: |
  #         echo "Deploying to production environment..."
  #         # Add production deployment steps here
  #         echo "Deployed to production environment"
